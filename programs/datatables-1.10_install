#!/usr/bin/env php
<?php
/**
 * Install datatables archive into Dynacase context dir
 *
 * @author Anakeen 2012
 * @license http://www.fsf.org/licensing/licenses/agpl-3.0.html GNU Affero General Public License
 */

$WIFF_ROOT = getenv("WIFF_ROOT");
if ($WIFF_ROOT === false) {
    print "WIFF_ROOT environment variable is not set!\n";
    exit(1);
}

$WIFF_CONTEXT_ROOT = getenv("WIFF_CONTEXT_ROOT");
if ($WIFF_CONTEXT_ROOT === false) {
    print "WIFF_CONTEXT_ROOT environment variable not set!\n";
    exit(1);
}

set_include_path(get_include_path() . PATH_SEPARATOR . $WIFF_CONTEXT_ROOT . PATH_SEPARATOR . "$WIFF_ROOT/include");

include_once('WHAT/Lib.System.php');

$datatables_zip = $argv[1];
if ($datatables_zip === NULL) {
    print sprintf("Missing datatables archive argument\n");
    exit(1);
}
$datatables_zip = realpath($datatables_zip);
if (!is_file($datatables_zip)) {
    print sprintf("datatables archive not found at '%s'\n", $datatables_zip);
    exit(1);
}

$ret = chdir($WIFF_CONTEXT_ROOT);
if ($ret === false) {
    print sprintf("Could not change directory to '%s'\n", $WIFF_CONTEXT_ROOT);
    exit(1);
}

$tmpfile = LibSystem::tempnam(null, 'datatables_unzip');
if ($tmpfile === false) {
    print sprintf("Could not create temporary file\n");
    exit(1);
}

$tempdir = basename($tmpfile);
$ret = mkdir($tempdir);
if ($ret === false) {
    print sprintf("Could not create temporary directory '%s'\n", $tempdir);
    @unlink($tmpfile);
    exit(1);
}

// Unpack archive in tempdir
$cmd = sprintf('unzip %s -d %s > %s 2>&1', escapeshellarg($datatables_zip), escapeshellarg($tempdir),
    escapeshellarg($tmpfile));
system($cmd, $ret);

$output = file_get_contents($tmpfile);
@unlink($tmpfile);

if ($ret !== 0) {
    print sprintf("Error %s: %s\n", $cmd, $output);
    exit(1);
}

// Set directory/files rights
$cmd = sprintf('find %s -type d -exec chmod 0755 {} \; > /dev/null 2>&1', escapeshellarg($tempdir));
system($cmd, $ret);
if ($ret !== 0) {
    print sprintf("Error setting rights on directories\n");
    exit(1);
}
$cmd = sprintf('find %s -type f -exec chmod 0644 {} \; > /dev/null 2>&1', escapeshellarg($tempdir));
system($cmd, $ret);
if ($ret !== 0) {
    print sprintf("Error setting rights on files\n");
    exit(1);
}

// Search for a /datatables/ subdir in the unpacked archive
$fh = opendir($tempdir);
if ($fh === false) {
    print sprintf("Error opening temporary directory '%s'\n", $tempdir);
    exit(1);
}

$datatables_subdir = 'lib/jquery-dataTables/1.10';
// Create datatables dir if it does not exists
if (!is_dir($datatables_subdir)) {
    $ret = mkdir($datatables_subdir);
    if ($ret === false) {
        print sprintf("Could not create '$datatables_subdir' directory\n");
        exit(1);
    }
}

// Copy new datatables files over existing datatables directory
$cmd = sprintf('cp -r %s/DataTables-1.10.3/media/* %s', escapeshellarg($tempdir), escapeshellarg($datatables_subdir));
system($cmd, $ret);

if ($ret !== 0) {
    print sprintf("Error copying datatables files (%s)\n", $cmd);
    exit(1);
}

// Cleanup tempdir
$cmd = sprintf('rm -Rf %s', escapeshellarg($tempdir));
system($cmd, $ret);

exit(0);

?>
